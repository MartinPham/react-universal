{"version":3,"sources":["pages/SampleWithSelector/index.js","pages/SampleWithSelector/constants.js","pages/SampleWithSelector/state.js","pages/SampleWithSelector/selectors/textSelector.js","pages/SampleWithSelector/selectors/uppercaseTextSelector.js"],"names":["Page","state","number","this","props","text","uppercaseText","onClick","setState","Math","random","navigator","push","goBack","goForward","go","React","PureComponent","mapState","createStructuredSelector","textSelector","uppercaseTextSelector","connect","ID","select","initialState","console","log","toUpperCase"],"mappings":"gOAUMA,E,2MACLC,MAAQ,CACPC,OAAQ,G,wEAGC,IAAD,OACR,OACC,6BACC,oDADD,SAEQC,KAAKC,MAAMC,KAAK,6BAFxB,mBAIkBF,KAAKC,MAAME,cAAc,6BAC1C,6BACA,4BACCC,QAAS,kBAAM,EAAKC,SAAS,CAC5BN,OAAQO,KAAKC,aAFf,yBAIwBP,KAAKF,MAAMC,QAC/B,6BACJ,4BACCK,QAAS,kBAAM,EAAKI,UAAUC,KAAK,UAAW,CAAEF,OAAQD,KAAKC,UAAY,aAD1E,uBAGA,6BAEA,4BACCH,QAAS,kBAAM,EAAKI,UAAUC,KAAK,UAAW,CAAEF,OAAQD,KAAKC,UAAY,WAD1E,qBAIA,6BAGA,4BACCH,QAAS,kBAAM,EAAKI,UAAUE,WAD/B,WAGA,6BAEA,4BACCN,QAAS,kBAAM,EAAKI,UAAUG,cAD/B,cAIA,6BACA,4BACCP,QAAS,kBAAM,EAAKI,UAAUI,IAAI,KADnC,SAGA,6BACA,4BACCR,QAAS,kBAAM,EAAKI,UAAUI,GAAG,KADlC,c,GA7CeC,IAAMC,eAuDnBC,EAAWC,YAAyB,CACzCd,KAAMe,UACNd,cAAee,YAGDC,sBACdJ,EADcI,CAEbtB,I,gCCxEF,0CAAO,IAAMuB,EAAK,sB,gCCElB,OAAe,WACHlB,KAAM,sB,gCCHlB,mCAIemB,sBAAO,OAAPA,CAAeD,KAAIE,Y,gCCJlC,mCAIeD,sBAAO,OAAQ,MAAM,SAAAnB,GAEnC,OADAqB,QAAQC,IAAI,wBACLtB,EAAKuB,gBAFEJ,CAGZD,KAAIE","file":"static/js/pages-SampleWithSelector.5fafdbbd.chunk.js","sourcesContent":["import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\n\nimport textSelector from './selectors/textSelector';\nimport uppercaseTextSelector from './selectors/uppercaseTextSelector';\n// import {ID} from './constants';\n\n\nclass Page extends React.PureComponent {\n\tstate = {\n\t\tnumber: 1\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Sample with selector</h1>\n\t\t\t\ttext: {this.props.text}<br/>\n\t\t\t\t{/* text (from props): {this.props.state[ID].text}<br/> */}\n\t\t\t\tuppercase text: {this.props.uppercaseText}<br/>\n\t\t\t\t<br/>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.setState({\n\t\t\t\t\t\tnumber: Math.random()\n\t\t\t\t\t})}\n\t\t\t\t>Change state.number = {this.state.number}</button>\n\t\t\t\t\t\t\t\t<hr/>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.navigator.push('@Sample', { random: Math.random() }, 'flyLeft')}\n\t\t\t\t>Go Sample (flyLeft)</button>\n\t\t\t\t<hr/>\n\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.navigator.push('@Sample', { random: Math.random() }, 'flyUp')}\n\t\t\t\t>Go Sample (flyUp)</button>\n\n\t\t\t\t<hr/>\n\n\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.navigator.goBack()}\n\t\t\t\t>Go Back</button>\n\t\t\t\t<hr/>\n\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.navigator.goForward()}\n\t\t\t\t>Go Forward</button>\n\n\t\t\t\t<hr/>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.navigator.go(-2)}\n\t\t\t\t>Go -2</button>\n\t\t\t\t<hr/>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.navigator.go(2)}\n\t\t\t\t>Go +2</button>\n\n        </div>\n\t\t)\n\t}\n}\n\n\nconst mapState = createStructuredSelector({\n\ttext: textSelector,\n\tuppercaseText: uppercaseTextSelector,\n})\n\nexport default connect(\n\tmapState\n)(Page)","export const ID = \"SampleWithSelector\";","\n\nexport default {\n            text: \"text from initial\"\n        }\n","import initialState from '../state';\nimport {ID} from \"../constants\";\nimport select from \"utils/select\";\n\nexport default select('text')(ID, initialState);","import initialState from '../state';\nimport {ID} from \"../constants\";\nimport select from \"utils/select\";\n\nexport default select('text', null, text => {\n\tconsole.log('making upper case...')\n\treturn text.toUpperCase()\n})(ID, initialState);"],"sourceRoot":""}