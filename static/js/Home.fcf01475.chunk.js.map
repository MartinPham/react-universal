{"version":3,"sources":["../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","pages/Page.js","utils/redux/injectReducer.js","utils/redux/reducerInjectors.js","utils/redux/injectSaga.js","utils/redux/sagaInjectors.js","components/Navigator/actions/goForward.js","pages/About/constants.js","pages/About/actions/changeText.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","pages/Home/state.js","pages/Home/constants.js","pages/Home/reducer.js","pages/Home/actions/changeAltText.js","pages/Home/sagas/changeTextSaga.js","pages/Home/saga.js","pages/Home/selectors/textSelector.js","pages/Home/selectors/altTextSelector.js","pages/Home/selectors/objectTextSelector.js","pages/Home/styles.js","pages/Home/render.js","utils/dom.js","pages/Home/index.js","pages/Home/actions/changeText.js","pages/Home/actions/changeObjectText.js","pages/Home/actions/changeObject.js","pages/Home/reducers/changeObjectReducer.js","pages/Home/reducers/changeObjectTextReducer.js","pages/Home/reducers/changeTextReducer.js","pages/Home/reducers/changeAltTextReducer.js"],"names":["REACT_STATICS","childContextTypes","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","length","prototype","caller","callee","arguments","arity","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","i","key","descriptor","e","BasePage","Component","BasePurePage","_PureComponent","_Z_DEV_REACT_react_universal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Z_DEV_REACT_react_universal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Z_DEV_REACT_react_universal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","apply","_Z_DEV_REACT_react_universal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","PureComponent","__webpack_exports__","_ref","reducer","WrappedComponent","ReducerInjector","_BaseComponent","_getPrototypeOf2","_this","_len","args","Array","_key","_Z_DEV_REACT_react_universal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Z_DEV_REACT_react_universal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","injectors","getInjectors","context","store","_Z_DEV_REACT_react_universal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Z_DEV_REACT_react_universal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","value","injectReducer","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","props","BaseComponent","PropTypes","object","isRequired","global","__webpack_require__","d","_createReducer__WEBPACK_IMPORTED_MODULE_0__","injectReducerFactory","isValid","Reflect","has","injectedReducers","rootReducer","createReducer","replaceReducer","saga","mode","InjectSaga","injectSaga","ejectSaga","RESTART_ON_REMOUNT","DAEMON","ONCE_TILL_UNMOUNT","injectSagaFactory","undefined","newDescriptor","_Z_DEV_REACT_react_universal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","hasSaga","injectedSagas","task","runSaga","ejectSagaFactory","cancel","_constants__WEBPACK_IMPORTED_MODULE_0__","GO_FORWARD","ID","CHANGE_OBJECT","CHANGE_TEXT","CHANGE_ALT_TEXT","text","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","Home_state","altText","msg","preloadedInitialState","getPreloadState","initialState","changeAltText","changeTextSaga_callee","data","regenerator_default","wrap","_context","prev","next","put","setTimeout","sent","stop","_marked","saga_callee","takeLatest","changeTextSaga","saga_marked","select","state","Date","Heading","styled","h1","_templateObject","ItemImage","div","_templateObject2","image","Home_render","$this","$props","$state","$routes","console","log","react_default","onChange","event","changeText","target","onClick","changeObjectText","changeObject","Math","random","objectText","changeAboutText","test1","setState","pho","position","node","boundingRect","getBoundingClientRect","JSON","parse","stringify","containerBoundingRect","document","getElementById","top","left","getBoundingRect","currentTarget","push","goBack","goForward","Page","render","mapState","createStructuredSelector","textSelector","altTextSelector","objectTextSelector","frontload","fn","mark","_callee","self","err","_x","withConnect","connect","dispatch","about_changeText","path","transition","originPosition","withReducer","action","set","fromJS","changeObjectReducer","setIn","changeObjectTextReducer","changeTextReducer","changeAltTextReducer","withSaga","compose","frontloadConnect","onMount","onUpdate"],"mappings":"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","file":"static/js/Home.fcf01475.chunk.js","sourcesContent":["'use strict';\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n\n    return targetComponent;\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;","import Component, {PureComponent} from 'components/Component';\n\nexport default class BasePage extends Component {\n\t\n}\n\n\nexport class BasePurePage extends PureComponent {\n\n}","import React from 'react';\n\nimport BaseComponent from 'components/Component';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport getInjectors from './reducerInjectors';\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nexport default ({ key, reducer }) => WrappedComponent => {\n\t// console.log('gonna inject ', key)\n\n\tclass ReducerInjector extends BaseComponent {\n\t\tstatic WrappedComponent = WrappedComponent;\n\t\tstatic contextTypes = {\n\t\t\tstore: PropTypes.object.isRequired,\n\t\t};\n\t\tstatic displayName = `withReducer(${WrappedComponent.displayName ||\n\t\t\tWrappedComponent.name ||\n\t\t\t'Component'})`;\n\n\n\n\t\tinjectors = getInjectors(this.context.store);\n\n\t\tcomponentWillMount() {\n\t\t\t\n\n\t\t\t// console.log('inject now');\n\t\t\n\t\t\tconst { injectReducer } = this.injectors;\n\n\t\t\tinjectReducer(key, reducer);\n\t\t}\n\n\t\trender() {\n\t\t\treturn <WrappedComponent {...this.props} />;\n\t\t}\n\t}\n\n\treturn hoistNonReactStatics(ReducerInjector, WrappedComponent);\n};\n","// import invariant from 'invariant';\n// import isEmpty from 'lodash/isEmpty';\n// import isFunction from 'lodash/isFunction';\n// import isString from 'lodash/isString';\n\n// import checkStore from './checkStore';\nimport createReducer from \"./createReducer\";\n\nexport function injectReducerFactory(store, isValid) {\n\treturn function injectReducer(key, reducer) {\n\t\t// if (!isValid) {\n\t\t// \tcheckStore(store);\n\t\t// }\n\n\t\t// invariant(\n\t\t// \tisString(key) && !isEmpty(key) && isFunction(reducer),\n\t\t// \t'(src/utils/redux...) injectReducer: Expected `reducer` to be a reducer function',\n\t\t// );\n\n\t\t// Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n\t\tif (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) {\n\t\t\treturn;\n\t\t}\n\n\t\tstore.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n\t\t// store.replaceReducer(createReducer(store.injectedReducers));\n\t\t// \n\t\t// \n\t\tconst rootReducer = createReducer(store.injectedReducers);\n\t\t// console.log(rootReducer);\n\t\t// console.log('replace reducer', rootReducer)\n  \t\tstore.replaceReducer(rootReducer);\n\t};\n}\n\nexport default function getInjectors(store) {\n\t// checkStore(store);\n\t\n\tif(typeof store ==='undefined')\n\t{\n\t\tstore = global.store;\n\t}\n\n\treturn {\n\t\tinjectReducer: injectReducerFactory(store, true),\n\t};\n}\n","import React from 'react';\nimport BaseComponent from 'components/Component';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport getInjectors from './sagaInjectors';\n\n/**\n * Dynamically injects a saga, passes component's props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (constants.RESTART_ON_REMOUNT) the saga will be started on component mount and\n * cancelled with `task.cancel()` on component un-mount for improved performance. Another two options:\n *   - constants.DAEMON—starts the saga on component mount and never cancels it or starts again,\n *   - constants.ONCE_TILL_UNMOUNT—behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n */\nexport default ({ key, saga, mode }) => WrappedComponent => {\n\tclass InjectSaga extends BaseComponent {\n\t\tstatic WrappedComponent = WrappedComponent;\n\t\tstatic contextTypes = {\n\t\t\tstore: PropTypes.object.isRequired,\n\t\t};\n\t\tstatic displayName = `withSaga(${WrappedComponent.displayName ||\n\t\t\tWrappedComponent.name ||\n\t\t\t'Component'})`;\n\t\tinjectors = getInjectors(this.context.store);\n\n\t\tcomponentWillMount() {\n\t\t\tconst { injectSaga } = this.injectors;\n\n\t\t\tinjectSaga(key, { saga, mode }, this.props);\n\t\t}\n\n\t\tcomponentWillUnmount() {\n\t\t\tconst { ejectSaga } = this.injectors;\n\n\t\t\tejectSaga(key);\n\t\t}\n\n\t\trender() {\n\t\t\treturn <WrappedComponent {...this.props} />;\n\t\t}\n\t}\n\n\treturn hoistNonReactStatics(InjectSaga, WrappedComponent);\n};\n","// import isEmpty from 'lodash/isEmpty';\n// import isFunction from 'lodash/isFunction';\n// import isString from 'lodash/isString';\n// import invariant from 'invariant';\n// import conformsTo from 'lodash/conformsTo';\n\n// import checkStore from './checkStore';\n\nexport const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nexport const DAEMON = '@@saga-injector/daemon';\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\n\n\n// const allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\n// const checkKey = key =>\n// \tinvariant(\n// \t\tisString(key) && !isEmpty(key),\n// \t\t'(app/utils...) injectSaga: Expected `key` to be a non empty string',\n// \t);\n\n// const checkDescriptor = descriptor => {\n// \tconst shape = {\n// \t\tsaga: isFunction,\n// \t\tmode: mode => isString(mode) && allowedModes.includes(mode),\n// \t};\n// \tinvariant(\n// \t\tconformsTo(descriptor, shape),\n// \t\t'(app/utils...) injectSaga: Expected a valid saga descriptor',\n// \t);\n// };\n\nexport function injectSagaFactory(store, isValid) {\n\treturn function injectSaga(key, descriptor = {}, args) {\n\t\t// if (!isValid) {\n\t\t// \tcheckStore(store);\n\t\t// }\n\n\t\tconst newDescriptor = {\n\t\t\t...descriptor,\n\t\t\tmode: descriptor.mode || RESTART_ON_REMOUNT,\n\t\t};\n\t\tconst { saga, mode } = newDescriptor;\n\n\t\t// checkKey(key);\n\t\t// checkDescriptor(newDescriptor);\n\n\t\tlet hasSaga = Reflect.has(store.injectedSagas, key);\n\n\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\tconst oldDescriptor = store.injectedSagas[key];\n\t\t\t// enable hot reloading of daemon and once-till-unmount sagas\n\t\t\tif (hasSaga && oldDescriptor.saga !== saga) {\n\t\t\t\toldDescriptor.task.cancel();\n\t\t\t\thasSaga = false;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasSaga || (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)) {\n\t\t\t/* eslint-disable no-param-reassign */\n\n\t\t\t// console.log('inject saga ' + key)\n\n\t\t\tconst task = store.runSaga(saga, args);\n\n\n\t\t\tstore.injectedSagas[key] = {\n\t\t\t\t...newDescriptor,\n\t\t\t\ttask,\n\t\t\t};\n\n\t\t\t// while(task.isRunning())\n\t\t\t// {\n\n\t\t\t// }\n\t\t\t/* eslint-enable no-param-reassign */\n\t\t}\n\t};\n}\n\nexport function ejectSagaFactory(store, isValid) {\n\treturn function ejectSaga(key) {\n\t\t// if (!isValid) {\n\t\t// \tcheckStore(store);\n\t\t// }\n\n\t\t// checkKey(key);\n\n\t\tif (Reflect.has(store.injectedSagas, key)) {\n\t\t\tconst descriptor = store.injectedSagas[key];\n\t\t\tif (descriptor.mode && descriptor.mode !== DAEMON) {\n\t\t\t\tdescriptor.task.cancel();\n\t\t\t\t// Clean up in production; in development we need `descriptor.saga` for hot reloading\n\t\t\t\tif (process.env.NODE_ENV === 'production') {\n\t\t\t\t\t// Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n\t\t\t\t\tstore.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport default function getInjectors(store) {\n\t// checkStore(store);\n\n\t\n\tif(typeof store ==='undefined')\n\t{\n\t\tstore = global.store;\n\t}\n\t\n\treturn {\n\t\tinjectSaga: injectSagaFactory(store, true),\n\t\tejectSaga: ejectSagaFactory(store, true),\n\t};\n}\n","import {GO_FORWARD} from \"../constants\";\n\nexport default () => ({\n    type: GO_FORWARD\n})","export const ID = \"About\";\n\nexport const CHANGE_OBJECT = ID + \"/ChangeObject\";\nexport const CHANGE_TEXT = ID + \"/ChangeText\";\nexport const CHANGE_ALT_TEXT = ID + \"/ChangeAltText\";","import {CHANGE_TEXT} from \"../constants\";\n\nexport default (text) => {\n\t// console.log('home changetext created')\n\treturn {\n\t    type: CHANGE_TEXT,\n\t    text\n\t}\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","\n\nexport default {\n            text: \"ciao\",\n            altText: \"\",\n            object: {\n\t\t\t\ttext: \"omg\",\n\t\t\t\tmsg: \"fff\"\n            }\n        }\n","export const ID = \"Home\";\n\nexport const CHANGE_OBJECT = ID + \"/ChangeObject\";\nexport const CHANGE_OBJECT_TEXT = ID + \"/ChangeObjectText\";\nexport const CHANGE_TEXT = ID + \"/ChangeText\";\nexport const CHANGE_ALT_TEXT = ID + \"/ChangeAltText\";","import initialState from './state';\nimport {ID, CHANGE_ALT_TEXT, CHANGE_TEXT, CHANGE_OBJECT_TEXT, CHANGE_OBJECT} from \"./constants\";\nimport changeTextReducer from \"./reducers/changeTextReducer\";\nimport changeAltTextReducer from \"./reducers/changeAltTextReducer\";\nimport getPreloadState from \"utils/redux/getPreloadState\";\nimport changeObjectReducer from \"./reducers/changeObjectReducer\";\nimport changeObjectTextReducer from \"./reducers/changeObjectTextReducer\";\n\nconst preloadedInitialState = getPreloadState(ID, initialState);\n\nexport default (state = preloadedInitialState, action) => {\n    // console.log('Run reducers >>> Home', state, action);\n    switch(action.type) {\n        case CHANGE_OBJECT:\n            return changeObjectReducer(state, action);\n        case CHANGE_OBJECT_TEXT:\n            return changeObjectTextReducer(state, action);\n        case CHANGE_TEXT:\n            return changeTextReducer(state, action);\n        case CHANGE_ALT_TEXT:\n            return changeAltTextReducer(state, action);\n        default:\n            return state;\n    }\n}","import {CHANGE_ALT_TEXT} from \"../constants\";\n\nexport default (text) => ({\n    type: CHANGE_ALT_TEXT,\n    text\n})","import { put } from 'redux-saga/effects';\nimport changeAltText from \"../actions/changeAltText\";\n\nexport default function*({text}) {\n    yield put(changeAltText('...'));\n\n    const data = yield (new Promise(resolve => setTimeout(() => resolve('changed from saga'), 2000)));\n    yield put(changeAltText(text + ' - ' + data));\n}","import { takeLatest } from 'redux-saga/effects';\nimport {CHANGE_TEXT} from \"./constants\";\nimport changeTextSaga from \"./sagas/changeTextSaga\";\n\nexport default function*() {\n    yield takeLatest(CHANGE_TEXT, changeTextSaga);\n}","import initialState from '../state';\nimport {ID} from \"../constants\";\nimport select from \"utils/select\";\n\nexport default select('text', null, state => {\n\treturn state + ' - ' + (new Date())\n})(ID, initialState);","import initialState from '../state';\nimport {ID} from \"../constants\";\nimport select from \"utils/select\";\n\nexport default select('altText')(ID, initialState);","import initialState from '../state';\nimport {ID} from \"../constants\";\nimport select from \"utils/select\";\n\n// export default select(\n// \t'object',\n// \t(mainState, key) => {\n// \t\tconsole.log('!!!! HEYYYY let me select object.text');\n// \t\treturn mainState.getIn([key, 'text']);\n// \t},\n// \tstate => {\n// \t\tconsole.log('!!!! hey let me calculate object text');\n//\n// \t\tlet result = state;\n//\n// \t\tfor(let i = 0; i < 100000; i++)\n// \t\t{\n// \t\t\tresult += i + ' ';\n// \t\t}\n//\n// \t\treturn result;\n// \t}\n// )(ID, initialState);\n\nexport default select(['object', 'text'])(ID, initialState);","import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n\tcolor: red;\n\tbackground: yellow;\t\n\tfont-size: 30px;\n`;\n\nexport const ItemImage = styled.div`\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center center;\n  width: 250px;\n  height: 250px;\n  margin: 50px;\n  cursor: pointer;\n  outline: none;\n  \n  transition: all 200ms;\n  \n  &:hover {\n    transform: scale(1.1);\n  }\n  &:active {\n    transform: scale(0.9);\n  }\n`;\n","import React from 'react';\nimport { Heading, ItemImage } from \"./styles\";\nimport pho from 'images/pho.jpg';\n// import log from \"utils/log\";\nimport {getBoundingRect} from \"utils/dom\";\n\nexport default ($this, $props, $state, $routes, ...$extra) => {\n\tconsole.log('Home render', $props);\n    return (\n        <div>\n            <Heading>Hello world!!! ops</Heading>\n            <p>text: {$props.text}</p>\n            <p>altText: {$props.altText}</p>\n\n            <input type=\"text\" value={$props.text} onChange={(event) => $props.changeText(event.target.value)}/>\n\n\n            <button\n                onClick={() => $props.changeText(\"I am from the Button\")}\n            >Hey</button>\n\t\t\t<br/>\n            <button\n                onClick={() => $props.changeObjectText('zzz')}\n            >Hey Object Text</button>\n\t\t\t<br/>\n            <button\n                onClick={() => $props.changeObject({\n                \t\ttext: \"omg\",\n\t\t\t\t\t\tmsg: Math.random()\n                \t})}\n            >Hey Object</button>\n\t\t\t<br/>\n\n\t\t\t<p>object.text: {$props.objectText}</p>\n            <button\n                onClick={() => $props.changeAboutText(\"I am from Home\")}\n            >Hey About</button>\n\t\t\t<br/>\n\n\t\t\t<b>state: {$state.test1}</b>\n\t\t\t<br/>\n            <button\n                onClick={() => $this.setState({\n\t\t\t\t\ttest1: \"2\"\n\t\t\t\t})}\n            >Hey State</button>\n            <br/>\n            <br/>\n\n            <ItemImage\n                image={pho}\n                onClick={(event) => {\n                    const target = event.currentTarget;\n                    let position = getBoundingRect(target);\n                    // log(target, position);\n\n                    $props.push('/item', {}, 'revealIn', position);\n                }}\n            />\n\n            <button\n                onClick={() => $props.push('/', {}, 'flyDown')}\n            >Go 127.0.0.1</button>\n            <br/>\n            <button\n                onClick={() => $props.push('/about', {}, 'flyLeft')}\n            >Go about (flyLeft)</button>\n            <br/>\n\n            <button\n                onClick={() => $props.push('/dashboard', {}, 'flyUp')}\n            >Go dashboard (flyUp)</button>\n            <br/>\n\n            <button\n                onClick={() => $props.push('/login', {}, 'flyUp')}\n            >Go login (flyUp)</button>\n            <br/>\n\n            <button\n                onClick={() => $props.goBack()}\n             >Go Back</button>\n            <br/>\n\n            <button\n                onClick={() => $props.goForward()}\n             >Go Forward</button>\n            <br/>\n        </div>\n    );\n}","export function getBoundingRect(node) {\n\tlet boundingRect = node.getBoundingClientRect();\n\tboundingRect = JSON.parse(JSON.stringify(boundingRect));\n\tconst Body = document.getElementById('root');\n\tconst containerBoundingRect = Body.getBoundingClientRect();\n\tboundingRect.top -= containerBoundingRect.top;\n\tboundingRect.left -= containerBoundingRect.left;\n\n\treturn boundingRect;\n}\n","// import React from 'react';\nimport {BasePurePage} from 'pages/Page';\n\n\nimport { frontloadConnect } from \"react-frontload\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport injectReducer from 'utils/redux/injectReducer';\nimport injectSaga from 'utils/redux/injectSaga';\n// import log from 'utils/log';\n\nimport push from 'components/Navigator/actions/push';\n\nimport reducer from './reducer';\nimport saga from './saga';\n\nimport { createStructuredSelector } from 'reselect';\n\n\nimport { ID } from \"./constants\";\n\nimport changeText from \"./actions/changeText\";\nimport textSelector from \"./selectors/textSelector\";\nimport altTextSelector from \"./selectors/altTextSelector\";\nimport objectTextSelector from \"./selectors/objectTextSelector\";\n\n\nimport render from './render';\nimport goBack from \"components/Navigator/actions/goBack\";\nimport goForward from \"components/Navigator/actions/goForward\";\nimport changeObject from \"./actions/changeObject\";\nimport changeObjectText from \"./actions/changeObjectText\";\n\n// import about_textSelector from \"pages/About/selectors/textSelector\";\nimport about_changeText from \"pages/About/actions/changeText\";\n\n\nclass Page extends BasePurePage {\n\tstate = {\n\t\ttest1: '1'\n\t};\n\n\trender()\n\t{\n\n\t\t// console.log('HOME RENDER: Home')\n\t\treturn render(this, this.props, this.state);\n\t\t// return null;\n\t}\n}\n\n\n\n\nPage.displayName = ID;\n\n//export default Page;\n\n\n\nconst mapState = createStructuredSelector({\n\ttext: textSelector,\n\taltText: altTextSelector,\n\tobjectText: objectTextSelector,\n});\n\n// console.log(mapState)\n\nconst mapDispatch = dispatch => ({\n\tchangeText: (text) => {\n\t\tdispatch(changeText(text))\n\t},\n\tchangeAboutText: (text) => {\n\t\tdispatch(about_changeText(text))\n\t},\n\tchangeObjectText: (text) => {\n\t\tdispatch(changeObjectText(text))\n\t},\n\tchangeObject: (object) => {\n\t\tdispatch(changeObject(object))\n\t},\n\tpush: (path, data, transition, originPosition) => dispatch(push(path, data, transition, originPosition)),\n\tgoBack: () => dispatch(goBack()),\n\tgoForward: () => dispatch(goForward()),\n});\n\n\n\nconst frontload = async props =>\n{\n\tconst data = await (new Promise(resolve => setTimeout(() => resolve('ciao mondo from async'), 1000)));\n\tprops.changeText(data);\n};\n\n\nconst withConnect = connect(\n\tmapState,\n\tmapDispatch\n);\n\n\n\n\nconst withReducer = injectReducer({ key: ID, reducer });\nconst withSaga = injectSaga({ key: ID, saga });\n\n\nexport default compose(\n\twithReducer,\n\twithSaga,\n\twithConnect,\n)(\n\tfrontloadConnect(frontload, {\n\t    onMount: true,\n\t    onUpdate: false\n\t})(Page)\n\t// Page\n);\n\n\n// export default compose(\n//     withReducer,\n//     withSaga,\n//     withConnect,\n// )(Page);\n","import {CHANGE_TEXT} from \"../constants\";\n\nexport default (text) => {\n\t// console.log('home changetext created')\n\treturn {\n\t    type: CHANGE_TEXT,\n\t    text\n\t}\n}","import {CHANGE_OBJECT_TEXT} from \"../constants\";\n\nexport default (text) => {\n\treturn {\n\t    type: CHANGE_OBJECT_TEXT,\n\t    text\n\t}\n}","import {CHANGE_OBJECT} from \"../constants\";\n\nexport default (object) => {\n\treturn {\n\t    type: CHANGE_OBJECT,\n\t    object\n\t}\n}","import {fromJS} from 'immutable';\n\nexport default (state, action) => {\n\t\n\t// console.log('change text..', action.text)\n    return state.set('object', fromJS(action.object));\n    // return {\n    //     ...state,\n    //     text: action.text\n    // }\n}","\n\nexport default (state, action) => {\n\t\n\t// console.log('change text..', action.text)\n    return state.setIn(['object', 'text'], action.text);\n    // return {\n    //     ...state,\n    //     text: action.text\n    // }\n}","export default (state, action) => {\n\t\n\t// console.log('change text..', action.text)\n    return state.set('text', action.text);\n    // return {\n    //     ...state,\n    //     text: action.text\n    // }\n}","export default (state, action) => {\n    return state.set('altText', action.text);\n    // return {\n    //     ...state,\n    //     altText: action.text\n    // }\n}"],"sourceRoot":""}