{"version":3,"sources":["components/Navigator/actions/push.js","components/Navigator/actions/goForward.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","pages/Home/state.js","pages/Home/constants.js","pages/Home/reducer.js","pages/Home/actions/changeAltText.js","pages/Home/sagas/changeTextSaga.js","pages/Home/saga.js","pages/Home/selectors/textSelector.js","pages/Home/selectors/altTextSelector.js","pages/Home/styles.js","pages/Home/render.js","utils/dom.js","pages/Home/index.js","pages/Home/actions/changeText.js","pages/Home/reducers/changeTextReducer.js","pages/Home/reducers/changeAltTextReducer.js"],"names":["_constants__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","path","data","arguments","length","undefined","transition","originPosition","type","PUSH","GO_FORWARD","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","Home_state","text","altText","ID","CHANGE_TEXT","preloadedInitialState","getPreloadState","initialState","changeAltText","changeTextSaga_callee","_ref","regenerator_default","a","wrap","_context","prev","next","setTimeout","sent","put","stop","_marked","this","saga_callee","takeLatest","changeTextSaga","saga_marked","main","rootState","Heading","styled","h1","_templateObject","ItemImage","div","_templateObject2","props","image","Home_render","$this","$props","$state","$routes","react_default","createElement","onChange","event","changeText","target","onClick","pho","currentTarget","position","node","boundingRect","getBoundingClientRect","JSON","parse","stringify","containerBoundingRect","document","getElementById","top","left","getBoundingRect","log","push","goBack","goForward","Component","render","state","React","displayName","mapState","createStructuredSelector","createSelector","get","frontload","fn","mark","_callee","self","args","apply","err","_x","withConnect","connect","dispatch","console","withReducer","injectReducer","reducer","action","set","changeTextReducer","changeAltTextReducer","withSaga","injectSaga","saga","compose","frontloadConnect","onMount","onUpdate"],"mappings":"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","file":"static/js/Home.7114275c.chunk.js","sourcesContent":["import {PUSH} from \"../constants\";\n\nexport default (path, data = {}, transition = '', originPosition = {}) => {\n\treturn {\n\t    type: PUSH,\n\t    path,\n\t\tdata,\n\t\ttransition,\n        originPosition\n\t}\n}","import {GO_FORWARD} from \"../constants\";\n\nexport default () => ({\n    type: GO_FORWARD\n})","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","\n\nexport default {\n            text: \"ciao\",\n            altText: \"...\",\n        }\n","export const ID = \"Home\";\n\nexport const CHANGE_TEXT = ID + \"/ChangeText\";\nexport const CHANGE_ALT_TEXT = ID + \"/ChangeAltText\";","import initialState from './state';\nimport {ID, CHANGE_ALT_TEXT, CHANGE_TEXT} from \"./constants\";\nimport changeTextReducer from \"./reducers/changeTextReducer\";\nimport changeAltTextReducer from \"./reducers/changeAltTextReducer\";\nimport getPreloadState from \"../../utils/redux/getPreloadState\";\n\nconst preloadedInitialState = getPreloadState(ID, initialState);\n\nexport default (state = preloadedInitialState, action) => {\n    // console.log('Run reducers >>> Home', state, action);\n    switch(action.type) {\n        case CHANGE_TEXT:\n            return changeTextReducer(state, action);\n        case CHANGE_ALT_TEXT:\n            return changeAltTextReducer(state, action);\n        default:\n            return state;\n    }\n}","import {CHANGE_ALT_TEXT} from \"../constants\";\n\nexport default (text) => ({\n    type: CHANGE_ALT_TEXT,\n    text\n})","import { put } from 'redux-saga/effects';\nimport changeAltText from \"../actions/changeAltText\";\n\nexport default function*({text}) {\n    const data = yield (new Promise(resolve => setTimeout(() => resolve('saga loaded'), 3000)));\n    yield put(changeAltText(text + ' & ' + data));\n}","import { takeLatest } from 'redux-saga/effects';\nimport {CHANGE_TEXT} from \"./constants\";\nimport changeTextSaga from \"./sagas/changeTextSaga\";\n\nexport default function*() {\n    yield takeLatest(CHANGE_TEXT, changeTextSaga);\n}","import { createSelector } from 'reselect';\nimport initialState from '../state';\nimport {ID} from \"../constants\";\n\nconst main = rootState => (rootState[ID] || initialState);\n\nexport default () =>\n    createSelector(main, state => state.get('text'));\n    // createSelector(main, state => state.text);","import { createSelector } from 'reselect';\nimport initialState from '../state';\nimport {ID} from \"../constants\";\n\nconst main = rootState => (rootState[ID] || initialState);\n\nexport default () =>\n    createSelector(main, state => state.get('altText'));\n    // createSelector(main, state => state.altText);","import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n\tcolor: red;\n\tbackground: yellow;\t\n\tfont-size: 30px;\n`;\n\nexport const ItemImage = styled.div`\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center center;\n  width: 250px;\n  height: 250px;\n  margin: 50px;\n  cursor: pointer;\n  outline: none;\n  \n  transition: all 200ms;\n  \n  &:hover {\n    transform: scale(1.1);\n  }\n  &:active {\n    transform: scale(0.9);\n  }\n`;\n","import React from 'react';\nimport { Heading, ItemImage } from \"./styles\";\nimport pho from 'images/pho.jpg';\nimport log from \"utils/log\";\nimport {getBoundingRect} from \"utils/dom\";\n\nexport default ($this, $props, $state, $routes, ...$extra) => {\n    return (\n        <div>\n            <Heading>Hello world!!! ops</Heading>\n            <p>text: {$props.text}</p>\n            <p>altText: {$props.altText}</p>\n\n            <input type=\"text\" value={$props.text} onChange={(event) => $props.changeText(event.target.value)}/>\n\n\n            <button\n                onClick={() => $props.changeText(\"I am from the Button\")}\n            >Hey</button>\n            <br/>\n            <br/>\n\n            <ItemImage\n                image={pho}\n                onClick={(event) => {\n                    const target = event.currentTarget;\n                    let position = getBoundingRect(target);\n                    log(target, position);\n\n                    $props.push('/item', {}, 'revealIn', position);\n                }}\n            />\n\n            <button\n                onClick={() => $props.push('/about', {}, 'flyLeft')}\n            >Go about (flyLeft)</button>\n            <br/>\n\n            <button\n                onClick={() => $props.push('/about', {}, 'flyUp')}\n            >Go about (flyUp)</button>\n            <br/>\n\n            <button\n                onClick={() => $props.goBack()}\n             >Go Back</button>\n            <br/>\n\n            <button\n                onClick={() => $props.goForward()}\n             >Go Forward</button>\n            <br/>\n        </div>\n    );\n}","export function getBoundingRect(node) {\n\tlet boundingRect = node.getBoundingClientRect();\n\tboundingRect = JSON.parse(JSON.stringify(boundingRect));\n\tconst Body = document.getElementById('root');\n\tconst containerBoundingRect = Body.getBoundingClientRect();\n\tboundingRect.top -= containerBoundingRect.top;\n\tboundingRect.left -= containerBoundingRect.left;\n\n\treturn boundingRect;\n}\n","import React from 'react';\n\n\nimport { frontloadConnect } from \"react-frontload\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport injectReducer from 'utils/redux/injectReducer';\nimport injectSaga from 'utils/redux/injectSaga';\n// import log from 'utils/log';\n\nimport push from 'components/Navigator/actions/push';\n\nimport reducer from './reducer';\nimport saga from './saga';\n\nimport { createStructuredSelector } from 'reselect';\n\n\nimport { ID } from \"./constants\";\n\nimport changeText from \"./actions/changeText\";\nimport textSelector from \"./selectors/textSelector\";\nimport altTextSelector from \"./selectors/altTextSelector\";\n\nimport render from './render';\nimport goBack from \"../../components/Navigator/actions/goBack\";\nimport goForward from \"../../components/Navigator/actions/goForward\";\n\n\n\nclass Component extends React.Component {\n    render()\n    {\n        return render(this, this.props, this.state);\n    }\n}\n\n\n\n\nComponent.displayName = ID;\n\n\nconst mapState = createStructuredSelector({\n    text: textSelector(),\n    altText: altTextSelector(),\n});\n\nconst mapDispatch = dispatch => ({\n    changeText: (text) => {\n        dispatch(changeText(text))\n    },\n    push: (path, data, transition, originPosition) => dispatch(push(path, data, transition, originPosition)),\n    goBack: () => dispatch(goBack()),\n    goForward: () => dispatch(goForward()),\n});\n\n\n\nconst frontload = async props =>\n{\n    const data = await (new Promise(resolve => setTimeout(() => resolve('ciao mondo from async'), 1000)));\n    props.changeText(data);\n};\n\n\nconst withConnect = connect(\n    mapState,\n    mapDispatch\n);\n\n\n\n\nconst withReducer = injectReducer({ key: ID, reducer });\nconst withSaga = injectSaga({ key: ID, saga });\n\n\nexport default compose(\n    withReducer,\n    withSaga,\n    withConnect,\n)(\n    frontloadConnect(frontload, {\n        onMount: true,\n        onUpdate: false\n    })(Component)\n);\n\n\n// export default compose(\n//     withReducer,\n//     withSaga,\n//     withConnect,\n// )(Component);","import {CHANGE_TEXT} from \"../constants\";\n\nexport default (text) => {\n\tconsole.log('home changetext created')\n\treturn {\n\t    type: CHANGE_TEXT,\n\t    text\n\t}\n}","export default (state, action) => {\n\t\n\tconsole.log('change text..', action.text)\n    return state.set('text', action.text);\n    // return {\n    //     ...state,\n    //     text: action.text\n    // }\n}","export default (state, action) => {\n    return state.set('altText', action.text);\n    // return {\n    //     ...state,\n    //     altText: action.text\n    // }\n}"],"sourceRoot":""}