{"version":3,"sources":["../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","utils/redux/reducerInjectors.js","utils/redux/injectReducer.js","utils/redux/sagaInjectors.js","utils/redux/injectSaga.js","components/Navigator/actions/goForward.js","pages/Contact/state.js","pages/Contact/saga.js","pages/Contact/constants.js","pages/Contact/index.js","pages/Contact/render.js","pages/Contact/reducer.js"],"names":["REACT_STATICS","childContextTypes","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","length","prototype","caller","callee","arguments","arity","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","i","key","descriptor","e","injectReducerFactory","store","isValid","reducer","Reflect","has","injectedReducers","rootReducer","createReducer","replaceReducer","__webpack_exports__","_ref","WrappedComponent","ReducerInjector","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","call","apply","injectors","injectReducer","context","inherits","createClass","value","react_default","a","createElement","props","React","Component","PropTypes","object","isRequired","RESTART_ON_REMOUNT","DAEMON","ONCE_TILL_UNMOUNT","injectSagaFactory","undefined","newDescriptor","objectSpread","mode","saga","hasSaga","injectedSagas","task","runSaga","ejectSagaFactory","cancel","InjectSaga","injectSaga","ejectSaga","_constants__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","GO_FORWARD","Contact_state","example","regenerator_default","wrap","_context","prev","next","stop","_marked","ID","Page","console","log","$props","state","onClick","push","mapState","createStructuredSelector","withConnect","connect","dispatch","path","data","transition","goBack","goForward","withReducer","initialState","withSaga","compose"],"mappings":"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","file":"static/js/Contact.4ee07050.chunk.js","sourcesContent":["'use strict';\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n\n    return targetComponent;\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;","// import invariant from 'invariant';\n// import isEmpty from 'lodash/isEmpty';\n// import isFunction from 'lodash/isFunction';\n// import isString from 'lodash/isString';\n\n// import checkStore from './checkStore';\nimport createReducer from \"./createReducer\";\n\nexport function injectReducerFactory(store, isValid) {\n\treturn function injectReducer(key, reducer) {\n\t\t// if (!isValid) {\n\t\t// \tcheckStore(store);\n\t\t// }\n\n\t\t// invariant(\n\t\t// \tisString(key) && !isEmpty(key) && isFunction(reducer),\n\t\t// \t'(src/utils/redux...) injectReducer: Expected `reducer` to be a reducer function',\n\t\t// );\n\n\t\t// Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n\t\tif (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) {\n\t\t\treturn;\n\t\t}\n\n\t\tstore.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n\t\t// store.replaceReducer(createReducer(store.injectedReducers));\n\t\t// \n\t\t// \n\t\tconst rootReducer = createReducer(store.injectedReducers);\n\t\t// console.log(rootReducer);\n\t\t// console.log('replace reducer', rootReducer)\n  \t\tstore.replaceReducer(rootReducer);\n\t};\n}\n\nexport default function getInjectors(store) {\n\t// checkStore(store);\n\n\treturn {\n\t\tinjectReducer: injectReducerFactory(store, true),\n\t};\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport getInjectors from './reducerInjectors';\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nexport default ({ key, reducer }) => WrappedComponent => {\n\t// console.log('gonna inject ', key)\n\n\tclass ReducerInjector extends React.Component {\n\t\tstatic WrappedComponent = WrappedComponent;\n\t\tstatic contextTypes = {\n\t\t\tstore: PropTypes.object.isRequired,\n\t\t};\n\t\tstatic displayName = `withReducer(${WrappedComponent.displayName ||\n\t\t\tWrappedComponent.name ||\n\t\t\t'Component'})`;\n\n\n\t\tinjectors = getInjectors(this.context.store);\n\n\t\tcomponentWillMount() {\n\n\t\t\t// console.log('inject now');\n\t\t\n\t\t\tconst { injectReducer } = this.injectors;\n\n\t\t\tinjectReducer(key, reducer);\n\t\t}\n\n\t\trender() {\n\t\t\treturn <WrappedComponent {...this.props} />;\n\t\t}\n\t}\n\n\treturn hoistNonReactStatics(ReducerInjector, WrappedComponent);\n};\n","// import isEmpty from 'lodash/isEmpty';\n// import isFunction from 'lodash/isFunction';\n// import isString from 'lodash/isString';\n// import invariant from 'invariant';\n// import conformsTo from 'lodash/conformsTo';\n\n// import checkStore from './checkStore';\n\nexport const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nexport const DAEMON = '@@saga-injector/daemon';\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\n\n\n// const allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\n// const checkKey = key =>\n// \tinvariant(\n// \t\tisString(key) && !isEmpty(key),\n// \t\t'(app/utils...) injectSaga: Expected `key` to be a non empty string',\n// \t);\n\n// const checkDescriptor = descriptor => {\n// \tconst shape = {\n// \t\tsaga: isFunction,\n// \t\tmode: mode => isString(mode) && allowedModes.includes(mode),\n// \t};\n// \tinvariant(\n// \t\tconformsTo(descriptor, shape),\n// \t\t'(app/utils...) injectSaga: Expected a valid saga descriptor',\n// \t);\n// };\n\nexport function injectSagaFactory(store, isValid) {\n\treturn function injectSaga(key, descriptor = {}, args) {\n\t\t// if (!isValid) {\n\t\t// \tcheckStore(store);\n\t\t// }\n\n\t\tconst newDescriptor = {\n\t\t\t...descriptor,\n\t\t\tmode: descriptor.mode || RESTART_ON_REMOUNT,\n\t\t};\n\t\tconst { saga, mode } = newDescriptor;\n\n\t\t// checkKey(key);\n\t\t// checkDescriptor(newDescriptor);\n\n\t\tlet hasSaga = Reflect.has(store.injectedSagas, key);\n\n\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\tconst oldDescriptor = store.injectedSagas[key];\n\t\t\t// enable hot reloading of daemon and once-till-unmount sagas\n\t\t\tif (hasSaga && oldDescriptor.saga !== saga) {\n\t\t\t\toldDescriptor.task.cancel();\n\t\t\t\thasSaga = false;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasSaga || (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)) {\n\t\t\t/* eslint-disable no-param-reassign */\n\n\t\t\t// console.log('inject saga ' + key)\n\n\t\t\tconst task = store.runSaga(saga, args);\n\n\n\t\t\tstore.injectedSagas[key] = {\n\t\t\t\t...newDescriptor,\n\t\t\t\ttask,\n\t\t\t};\n\n\t\t\t// while(task.isRunning())\n\t\t\t// {\n\n\t\t\t// }\n\t\t\t/* eslint-enable no-param-reassign */\n\t\t}\n\t};\n}\n\nexport function ejectSagaFactory(store, isValid) {\n\treturn function ejectSaga(key) {\n\t\t// if (!isValid) {\n\t\t// \tcheckStore(store);\n\t\t// }\n\n\t\t// checkKey(key);\n\n\t\tif (Reflect.has(store.injectedSagas, key)) {\n\t\t\tconst descriptor = store.injectedSagas[key];\n\t\t\tif (descriptor.mode && descriptor.mode !== DAEMON) {\n\t\t\t\tdescriptor.task.cancel();\n\t\t\t\t// Clean up in production; in development we need `descriptor.saga` for hot reloading\n\t\t\t\tif (process.env.NODE_ENV === 'production') {\n\t\t\t\t\t// Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n\t\t\t\t\tstore.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport default function getInjectors(store) {\n\t// checkStore(store);\n\n\treturn {\n\t\tinjectSaga: injectSagaFactory(store, true),\n\t\tejectSaga: ejectSagaFactory(store, true),\n\t};\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport getInjectors from './sagaInjectors';\n\n/**\n * Dynamically injects a saga, passes component's props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (constants.RESTART_ON_REMOUNT) the saga will be started on component mount and\n * cancelled with `task.cancel()` on component un-mount for improved performance. Another two options:\n *   - constants.DAEMON—starts the saga on component mount and never cancels it or starts again,\n *   - constants.ONCE_TILL_UNMOUNT—behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n */\nexport default ({ key, saga, mode }) => WrappedComponent => {\n\tclass InjectSaga extends React.Component {\n\t\tstatic WrappedComponent = WrappedComponent;\n\t\tstatic contextTypes = {\n\t\t\tstore: PropTypes.object.isRequired,\n\t\t};\n\t\tstatic displayName = `withSaga(${WrappedComponent.displayName ||\n\t\t\tWrappedComponent.name ||\n\t\t\t'Component'})`;\n\t\tinjectors = getInjectors(this.context.store);\n\n\t\tcomponentWillMount() {\n\t\t\tconst { injectSaga } = this.injectors;\n\n\t\t\tinjectSaga(key, { saga, mode }, this.props);\n\t\t}\n\n\t\tcomponentWillUnmount() {\n\t\t\tconst { ejectSaga } = this.injectors;\n\n\t\t\tejectSaga(key);\n\t\t}\n\n\t\trender() {\n\t\t\treturn <WrappedComponent {...this.props} />;\n\t\t}\n\t}\n\n\treturn hoistNonReactStatics(InjectSaga, WrappedComponent);\n};\n","import {GO_FORWARD} from \"../constants\";\n\nexport default () => ({\n    type: GO_FORWARD\n})","export default {\n  example: '1'\n};","export default function* saga() {}\n","export const ID = 'Contact';\n\n\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport injectReducer from 'utils/redux/injectReducer';\nimport injectSaga from 'utils/redux/injectSaga';\n// import log from 'utils/log';\n\nimport push from 'components/Navigator/actions/push';\n\nimport reducer from './reducer';\nimport saga from './saga';\n\nimport { createStructuredSelector } from 'reselect';\n\n\nimport { ID } from \"./constants\";\n\nimport render from './render';\nimport goBack from \"../../components/Navigator/actions/goBack\";\nimport goForward from \"../../components/Navigator/actions/goForward\";\n\nclass Page extends React.Component {\n    render() {\n        console.log('PAGE RENDER: Contact')\n        return render(this, this.props, this.state);\n    }\n}\n\nPage.displayName = ID;\n\n\nconst mapState = createStructuredSelector({\n\n});\n\nconst mapDispatch = dispatch => ({\n    push: (path, data, transition) => dispatch(push(path, data, transition)),\n    goBack: () => dispatch(goBack()),\n    goForward: () => dispatch(goForward()),\n});\n\n\nconst withConnect = connect(\n    mapState,\n    mapDispatch\n);\n\n\n\n\nconst withReducer = injectReducer({ key: ID, reducer });\nconst withSaga = injectSaga({ key: ID, saga });\n\n\nexport default compose(\n    withReducer,\n    withSaga,\n    withConnect,\n)(Page);\n","import React from 'react';\n\n\nexport default ($this, $props, $state, $routes, ...$extra) => {\n    return (\n        <div>\n            Contact\n\n            <br/>\n            <button\n                onClick={() => $props.push('/', {}, 'slideLeft')}\n            >Go home (slideLeft)</button>\n            <br/>\n\n            <button\n                onClick={() => $props.push('/', {}, 'slideUp')}\n            >Go Home (slideUp)</button>\n            <br/>\n\n            <button\n                onClick={() => $props.push('/', {}, 'slideDown')}\n            >Go Home (slideDown)</button>\n        </div>\n    );\n}","import initialState from './state';\n\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n"],"sourceRoot":""}